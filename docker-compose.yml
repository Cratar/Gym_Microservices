version: '3.8'

services:
  db:
    restart: always
    image: postgres:latest
    container_name: db_all
    ports:
      - "8081:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 0000nN
      POSTGRES_HOST: host.docker.internal
      POSTGRES_DB: sport_gyms
    volumes:
      - pgdata:/var/lib/postgresql/data

  adding_pages:
    restart: always
    build: ./AddingPages/AddingPages
    container_name: adding_pages
    ports:
      - "8082:80"
    depends_on:
      - db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 0000nN
      POSTGRES_HOST: host.docker.internal
      POSTGRES_DB: sport_gyms
    command: ["/bin/bash", "-c", "sleep 10 && ./build/AddingPages"]


  create_db_table:
    restart: always
    build: ./CreateDbTable/CreateDbTable
    container_name: create_db_table
    ports:
      - "8083:80"
    depends_on:
      - db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 0000nN
      POSTGRES_HOST: host.docker.internal
      POSTGRES_DB: sport_gyms
    command: ["/bin/bash", "-c", "sleep 10 && ./build/CreateDbTable"]

  authorization_admin:
    restart: always
    build: ./AuthorizationAdmin/AuthorizationAdmin
    container_name: authorization_admin
    ports:
      - "8084:80"
    depends_on:
      - db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 0000nN
      POSTGRES_HOST: host.docker.internal
      POSTGRES_DB: sport_gyms
    command: ["/bin/bash", "-c", "sleep 10 && ./build/AuthorizationAdmin"]

  reg_admin:
    build: ./RegistrationAdministrator/RegistrationAdministrator
    container_name: reg_admin
    ports:
      - "8085:80"
    depends_on:
      - db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 0000nN
      POSTGRES_HOST: host.docker.internal
      POSTGRES_DB: sport_gyms
    command: ["/bin/bash", "-c", "sleep 10 && ./build/RegAdmin"]

  reg_users:
    build: ./RegistrationUser/RegistrationUser
    container_name: reg_users
    ports:
      - "8086:80"
    depends_on:
      - db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 0000nN
      POSTGRES_HOST: host.docker.internal
      POSTGRES_DB: reg_user
    command: ["/bin/bash", "-c", "sleep 10 && ./build/RegUser"]


  aut_users:
    build: ./AuthorizationUser/AuthorizationUser
    container_name: aut_users
    ports:
      - "8087:80"
    depends_on:
      - db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 0000nN
      POSTGRES_HOST: host.docker.internal
      POSTGRES_DB: reg_user
    command: ["/bin/bash", "-c", "sleep 10 && ./build/AuthorizationUser"]




volumes:
  pgdata: {}
